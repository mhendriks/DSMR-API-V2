/*
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/34f2a6a9-d545-4a2d-b9cf-11df69510a3c

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  String tijd;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/
// Code generated by Arduino IoT Cloud, DO NOT EDIT.
#ifdef USE_APP

const char THING_ID[]           = "34f2a6a9-d545-4a2d-b9cf-11df69510a3c";
const char DEVICE_LOGIN_NAME[]  = "647cab85-79bb-4912-aae3-566e8a28c67d";

//const char SSID[]               = SECRET_SSID;    // Network SSID (name)
//const char PASS[]               = SECRET_PASS;    // Network password (use for WPA, or use as key for WEP)
const char DEVICE_KEY[]  = "0KSC8SR9AJT8UKEK7FO9";    // Secret device password

float Gas, Water;
uint32_t EnergyGeleverd, EnergyTerug, EnergyGeleverdT1, EnergyGeleverdT2, EnergyTerugT1, EnergyTerugT2;

void initProperties(){

  ArduinoCloud.setBoardId(DEVICE_LOGIN_NAME);
  ArduinoCloud.setSecretDeviceKey(DEVICE_KEY);
  ArduinoCloud.setThingId(THING_ID);
  ArduinoCloud.addProperty(EnergyGeleverd, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(EnergyTerug, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(Gas, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(Water, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(EnergyGeleverdT1, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(EnergyGeleverdT2, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(EnergyTerugT1, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(EnergyTerugT2, READ, ON_CHANGE, NULL);
}

//WiFiConnectionHandler ArduinoIoTPreferredConnection(SSID, PASS);
void APPUpdate(){
  EnergyGeleverd = DSMRdata.power_delivered * 1000;
  EnergyTerug = DSMRdata.power_returned * 1000;
  Gas = gasDelivered;
  Water = (float)P1Status.wtr_m3 + P1Status.wtr_l/1000.0;
  EnergyGeleverdT1 = DSMRdata.energy_delivered_tariff1;
  EnergyGeleverdT2 = DSMRdata.energy_delivered_tariff2;
  EnergyTerugT1 = DSMRdata.energy_returned_tariff1;
  EnergyTerugT2 = DSMRdata.energy_returned_tariff2;
  ArduinoCloud.update();
}

void APPsetup() {
  // Initialize serial and wait for port to open:
//  Serial.begin(9600);
//  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
//  delay(1500);

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(wifiClient);

  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
  */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

#endif USE_APP
